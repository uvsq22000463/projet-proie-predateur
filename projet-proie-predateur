# projet-proie-predateur
# projet-proie-predateur

#########################################
# groupe MIASHS TD01
# David DAULASIM
# Adama KOUNDOUL
# Rina Andrianina RASOLONJATOVO
# Amélie COTTANCIN
# https://github.com/uvsq22000463/projet-proie-predateur
#########################################

import tkinter as tk
import random as rd
from tkinter.ttk import Button

# Création du canevas à fond noir
racine = tk.Tk()
canevas = tk.Canvas(racine, height = 450, width = 450, bg = "black")
canevas.grid()
racine.title("Proie-Prédateur")

# Variables
lim_carre = 30
larg = 450
haut = 450
larg_case = larg // lim_carre
haut_case = haut // lim_carre
grille = None
Apro = 3
Apre = 5
Epre = 4
Fpro = 3
miam = 1
Erepro = 6
flair = 6
lim_carre2 = 29
# Liste
l_proie = []
l_pred = []
# Création des proies en bleu et des prédateurs en rouge
grille = [[0 for i in range(lim_carre)]for j in range(lim_carre)]

for b in range(1, lim_carre):
     x = (b) * larg_case
     for c in range(1, lim_carre):
      y = (c) * haut_case
      carre = canevas.create_rectangle(x, y, x + larg_case, y + haut_case, fill = "black", outline = "grey")
      grille[b][c] = carre
      # Création des coordonnées X et Y d'une proie
      proie1 = rd.randint(0, lim_carre2)
      proie2 = rd.randint(0, lim_carre2)     
      # Apparition de cette proie à partir des coordonnées générées                                
      canevas.itemconfigure(grille[proie1][proie2], fill = "blue")   
      # Idem     
      proie3 = rd.randint(0, lim_carre2) 
      proie4 = rd.randint(0, lim_carre2) 
      vide1 = rd.randint(0,lim_carre2)
      vide2 = rd.randint(0,lim_carre2)
      canevas.itemconfigure(grille[proie3][proie4], fill = "blue")
      canevas.itemconfigure(grille[vide1][vide2], fill = "black")    
      
# Variable servant au déplacement des proies et des prédateurs
      step = rd.choice([1, -1, 0])                               
      step2 = rd.choice([1, -1, 0])

# Fonction pour utilisé le boutton "Tour de jeu"
def tour_de_jeu() :
# La portée des variables s'étend à tout le programme
 global Apro, grille, l_proie, Apre, step3, step4, miam, Epre, flair,lim_carre2,l_pred
 
# Apparition des proies et des prédateures au hasard dans le canevas
# Chaque tour de jeu il y'a 3 nouvelles proies
 proie5 = rd.randint(0, lim_carre2)
 proie6 = rd.randint(0, lim_carre2) 
 proie7 = rd.randint(0, lim_carre2)
 proie8 = rd.randint(0, lim_carre2)
 proie9 = rd.randint(0, lim_carre2)
 proie10 = rd.randint(0, lim_carre2)
 pred_a = rd.randint(0, lim_carre2) 
 pred_b = rd.randint(0, lim_carre2)
 l_pred.extend([pred_a, pred_b])
# Liste qui enregistre les coordonnées des proies
 l_proie.extend([proie5, proie6])

# Condition pour ne pas que les proies remplacent les prédateurs
 if grille[proie5][proie6] != grille[pred_a][pred_b] and grille[proie7][proie8] != grille[pred_a][pred_b] and grille[proie9][proie10] != grille[pred_a][pred_b]:
     canevas.itemconfigure(grille[proie5][proie6], fill = "blue") 
     l_proie.extend([proie7,proie8])
     canevas.itemconfigure(grille[proie7][proie8], fill = "blue") 
     l_proie.extend([proie9,proie10])
     canevas.itemconfigure(grille[proie9][proie10], fill = "blue")
 canevas.itemconfigure(grille[pred_a][pred_b], fill = "red")
 
 for i in range (0, 28, 2):
     for t in range(1, lim_carre2, 2):
            # Déplacement des proies 
              deplacement1 = i + step           
              deplacement2 = t + step2
              proiex = i+step
              pres = i+step2
              if grille[deplacement1][deplacement2] != grille[i][t]:
                    canevas.itemconfigure(grille[i][t], fill = "black")
                    canevas.itemconfigure(grille[deplacement1][deplacement2], fill = "blue")
                    # Création d'une proie aléatoirement sous reserve que 2 proies soient côte à côte                 
                    if grille[i][t] == grille[pres][t]:
                          canevas.itemconfigure(grille[proiex][t], fill = "blue")
                          
    # For i in range permet l'apparition de prédateurs              
     for i in range(lim_carre):
       # Apparition des prédateurs
        pred1 = rd.randint(0, lim_carre2)
        pred2 = rd.randint(0, lim_carre2)
        l_pred.extend([pred1,pred2])
        canevas.itemconfigure(grille[pred1][pred2], fill = "red")
 if Apro == 2:
      for i in range (0, 28, 2):
          for t in range(1, lim_carre2, 2):
            # Fuite des proies (partie 4)
              step3 = rd.choice([0, 1, -1])
              step4 = rd.choice([0, 1, -1])   
              deplacement3 = i + step3
              deplacement4 = t + step4
              canevas.itemconfigure(grille[i][t], fill = "black")
              canevas.itemconfigure(grille[deplacement3][deplacement4], fill = "blue")

 Apro = Apro - 1
 Epre = Epre - 1
 if Apro == 0:
      for vide3 in range(lim_carre):
          for vide4 in range(lim_carre):
                # Disparition des proies
                 canevas.itemconfigure(grille[proie5][proie6], fill = "blue")
                # Apparition de 3 nouvelles proies
                 canevas.itemconfigure(grille[proie7][proie8], fill = "blue")
                 canevas.itemconfigure(grille[proie9][proie10], fill = "blue") 
                 canevas.itemconfigure(grille[vide3][vide4], fill = "black")   
                 
      for i in range(lim_carre):
        # Apparition des prédateurs au hasard dans le canevas
        pred3 = rd.randint(0, lim_carre2)
        pred4 = rd.randint(0, lim_carre2)
        l_pred.extend([pred3, pred4])
        canevas.itemconfigure(grille[pred3][pred4], fill = "red")
                 
 if Apro <= -1:
            # Création de proies
             for vide5 in range (lim_carre):  
               for vide6 in range(lim_carre):
                   if grille[vide5][vide6] != grille[proie5][proie6] and grille[vide5][vide6] != grille[proie7][proie8] and grille[vide5][vide6] != grille[proie9][proie10]:
                     canevas.itemconfigure(grille[vide5][vide6], fill = "black") 
  
             for i in range(lim_carre):
               pred5 = rd.randint(0, lim_carre2) 
               pred6 = rd.randint(0, lim_carre2)
               l_pred.extend([pred5,pred6])
               # Dispersion des prédateurs
               pred7 = pred5 + step 
               pred8 = pred6 + step2
               l_pred.extend([pred7,pred8])
               if pred7 < lim_carre and pred8 < lim_carre:
                
                canevas.itemconfigure(grille[pred7][pred8], fill = "red")  
                if grille[pred7][pred8] == grille[proie5][proie6] or grille[pred7][pred8] == grille[proie7][proie8] or grille[pred7][pred8] == grille[proie9][proie10]:
                 Epre = Epre + miam  
                 # Création d'un predateur si son niveau d'énergie est suffisant
                 if Erepro <= Epre:
                    canevas.itemconfigure(grille[pred6][pred5], fill = "red")
                
 
#if Apro==-3:
   # for dead1 in range(0,5,2):
     #   for dead2 in range(1,6,2):
         #   canevas.itemconfigure(grille[l_proie[dead1]][l_proie[dead2]],fill="black")
#if Apro==-6:                                                         #mort des proies
    # for dead3 in range(4,9,2):
        #for dead4 in range(5,10,2):
           # canevas.itemconfigure(grille[l_proie[dead3]][l_proie[dead4]],fill="black")

#mort des predateurs

# Disparition des prédateurs sous condition qu'il n'a plus d'énergie
 if Epre == 0:
  for predx in range(lim_carre):
    for predy in range(lim_carre):
      if grille[predx][predy] != grille[proie5][proie6] or grille[predx][predy] != grille[proie7][proie8] or grille[predx][predy] != grille[proie9][proie10]:
          canevas.itemconfigure(grille[predx][predy], fill = "black")
  canevas.itemconfigure(grille[proie5][proie6], fill = "blue")
  canevas.itemconfigure(grille[proie7][proie8], fill = "blue")
  canevas.itemconfigure(grille[proie9][proie10], fill = "blue")  
  
#PARTIE 4

 #for i in range(lim_carre):
   #for v in range(lim_carre):
    #predw= l_pred[i]+flair 
    #predq=l_pred[v]+flair
    #if predw<lim_carre and predq<lim_carre: 
      #if l_proie[i]>=predw and l_proie[i]<=l_pred[i]:
       #if l_proie[v]>=predq and l_proie[v]<=l_pred[i]:
         # canevas.itemconfigure(grille[l_proie[i]][l_proie[v]],fill="red")
         # canevas.itemconfigure(grille[predw][l_pred[i]],fill="black)
         # canevas.itemconfigure(grille[predq][l_pred[i]],fill="black)
         
bouton = tk.Button(racine,text = "Tour de jeu", command = tour_de_jeu)
bouton.grid()
racine.mainloop()
